#include<iostream>
#include<conio.h>
#include<clocale>
#include<string>
using namespace std;
/*  Enumiration- перечесление(перечисляемые типы). Перечисляются целые константы.
    Перечисление — это отдельный тип данных. Перечесление- Создание именованных
    констант с автоматическим увеличением значения константы. всем идентификаторам (целочисленным
    константам) перечисления присваивается значение. По умолчанию первому – 0,
    остальным на единицу больше предыдущего значения. А если мы сами задаем
    значение — то это может быть любое целое число.
    При этом, ВАЖНО, имена целочисленных констант должны быть уникальны.
    При определении одинаковых имен компилятор выдаст ошибку. А вот значения,
    которые мы присваиваем константам могут совпадать.
    Значение константам можно присвоить только в фигурных скобках при определении
    перечисления. Изменить его ниже в коде уже нет возможности.

    Перечисление объявляется вне функции маин и должно быть инициализировано сразу все.
    Нужно для собирания всех переменных одного типа в одном месте и не засоряя при этом основной код.
*/
enum  weddingAnn {chintz = 1, paper, leather, linen, wooden} year;
//определяем перечисление и объявляем переменную year


// определим перечисление этажей для торгового центра
enum mall{parking=-1, hall=1, shop, cotages, roof};


int main()
{
  setlocale(LC_CTYPE, "rus");

  cout << "Олег с Ольгой отмечают\t" << chintz << "-ю годовщину со дня свадьбы!!!";
  cout << "\n";
  cout << "Андрей с Анной отмечают\t" << paper << "-ю годовщину со дня свадьбы!!!";
  cout << "\n";
  cout << "Марк с Ириной отмечают\t" << leather << "-ю годовщину со дня свадьбы!!!";
  cout << "\n";
  cout << "Игорь с Юлией отмечают\t" << linen << "-ю годовщину со дня свадьбы!!!";
  cout << "\n";
  cout << "Олег с Аллой отмечают\t" << wooden << "-ю годовщину со дня свадьбы!!!";
  cout << "\n\n";


  //реализация лифта
  int floor;
  bool exit = false;
  while (!exit) // пока exit= false мы будем выполнять этот код
  {
    cout<<" Введите ваш этож(-1; 1; 2; 3; 4): ";
    cin>>floor;

    switch (floor)
    {
      case parking:
        cout << "Мы на парковке. Хотите выйти из лифта или выбрать другой этаж?";
        cout << "\n(1- выйти, 0- выбрать другой этаж): "
        cin >> exit;
      break;

      case hall:
        cout << "Мы находимся в холле. Хотите выйти из лифта или выбрать другой этаж?";
        cout << "\n(1- выйти, 0- выбрать другой этаж): "
        cin >> exit;
      break;

      case shop:
        cout << "Мы в АШАНе. Хотите выйти из лифта или выбрать другой этаж?";
        cout << "\n(1- выйти, 0- выбрать другой этаж): "
        cin >> exit;
      break;

      case cotages:
        cout << "Здесь находятся частные квартиры. Хотите выйти из лифта или выбрать другой этаж?";
        cout << "\n(1- выйти, 0- выбрать другой этаж): "
        cin >> exit;
      break;

      case roof:
        cout << "Мы на крыше. Хотите выйти из лифта или выбрать другой этаж?";
        cout << "\n(1- выйти, 0- выбрать другой этаж): "
        cin >> exit;
      break;

      default:
        cout<<" У нас нет такого этажа"
    }
  cout<<" Спасибо за посещение нашего торгово-развлекательного комплекса! Хорошего дня) "
  system ("pause");
  return 0;
}


















  system("pause");
  return 0;
}
