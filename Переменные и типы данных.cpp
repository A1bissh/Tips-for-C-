#include<iostream>
#include<conio.h>
#include<cstdio>
using namespace std;
int main()
{
/*Целый тип (int)
Размер типа int не определяется стандартом, а зависит от компьютера и
компилятора. Для 16-разрядного процессора под величины этого типа отводится
2 байта, для 32-разрядного — 4 байта.*/
int -целый;
/*Символьный тип (char)
Под величину символьного типа отводится количество байт, достаточное для
размещения любого символа из набора символов для данного компьютера, что и
обусловило название типа. Как правило, это 1 байт. Тип char, как и другие
целые типы, может быть со знаком или без знака. В величинах со знаком можно
хранить значения в диапазоне от -128 до 127. При использовании спецификатора
unsigned значения могут находиться в пределах от О до 255. Этого достаточно для
хранения любого символа из 256-символьного набора ASCII. Величины типа char
применяются также для хранения целых чисел, не превышающих границы указанных
диапазонов.*/
char -символьный;
/*Расширенный символьный тип (wchar_t)
Тип wchar_t предназначен для работы с набором символов, для кодировки которых
недостаточно 1 байта, например, Unicode. Размер этого типа зависит от
реализации; как правило, он соответствует типу short. Строковые константы
типа wchar_t записываются с префиксом L, например, L»Gates».*/
wchar_t -расширенный символьный;
/*Логический тип (bool)
Величины логического типа могут принимать только значения true и false,
являющиеся зарезервированными словами. Внутренняя форма представления
значения false — 0 (нуль). Любое другое значение интерпретируется как true.
При преобразовании к целому типу true имеет значение 1.*/
bool -логический;
/*Типы с плавающей точкой (float, double и long double)
Стандарт C++ определяет три типа данных для хранения вещественных значений:
float, double и long double.
Типы данных с плавающей точкой хранятся в памяти компьютера иначе, чем
целочисленные. Внутреннее представление вещественного числа состоит из двух
частей — мантиссы и порядка. В IBM PC-совместимых компьютерах величины типа
float занимают 4 байта, из которых один двоичный разряд отводится под знак
мантиссы, 8 разрядов под порядок и 23 под мантиссу. Мантисса — это число,
большее 1.0, но меньшее 2.0. Поскольку старшая цифра мантиссы всегда равна 1,
она не хранится.
Для величин типа double, занимающих 8 байт, под порядок и мантиссу отводится
11 и 52 разряда соответственно. Длина мантиссы определяет точность числа, а
длина порядка — его диапазон. Как можно видеть из таблицы в конце записи,
при одинаковом количестве байт, отводимом под величины типа float и long int,
диапазоны их допустимых значений сильно различаются из-за внутренней формы
представления.
Константы с плавающей точкой имеют по умолчанию тип double. Можно явно указать 
тип константы с помощью суффиксов F, f (float) и L, l (long). Например,
константа 2E+6L будет иметь тип long double, а константа 1.82f — тип float.*/
float -вещественный;
double -вещественный с двойной точностью;



  system("pause");
  return 0;
}
